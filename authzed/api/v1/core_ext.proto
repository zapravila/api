syntax = "proto3";
package authzed.api.v1;

option go_package = "github.com/authzed/authzed-go/proto/authzed/api/v1";
option java_package = "com.authzed.api.v1";

import "google/protobuf/struct.proto";
import "validate/validate.proto";

// Relationship specifies how a resource relates to a subject. Relationships
// form the data for the graph over which all permissions questions are
// answered.
message RelationshipExt {
  // resource is the resource to which the subject is related, in some manner
  ObjectReference resource = 1 [ (validate.rules).message.required = true ];

  // relation is how the resource and subject are related.
  string relation = 2 [ (validate.rules).string = {
    pattern : "^[a-z][a-z0-9_]{1,62}[a-z0-9]$",
    max_bytes : 64,
  } ];

  // subject is the subject to which the resource is related, in some manner.
  SubjectReference subject = 3 [ (validate.rules).message.required = true ];

  string optional_description = 4 [ (validate.rules).message.required = false ];
  string optional_comment = 5 [ (validate.rules).message.required = false ];
  // optional_caveat is a reference to a the caveat that must be enforced over the relationship
  ContextualizedCaveat optional_caveat = 6 [ (validate.rules).message.required = false ];
}


// RelationshipUpdate is used for mutating a single relationship within the
// service.
//
// CREATE will create the relationship only if it doesn't exist, and error
// otherwise.
//
// TOUCH will upsert the relationship, and will not error if it
// already exists.
//
// DELETE will delete the relationship. If the relationship does not exist,
// this operation will no-op.
message RelationshipUpdateExt {
  enum Operation {
    OPERATION_UNSPECIFIED = 0;
    OPERATION_CREATE = 1;
    OPERATION_TOUCH = 2;
    OPERATION_DELETE = 3;
  }
  Operation operation = 1 [ (validate.rules).enum = {defined_only: true, not_in: [0]} ];
  RelationshipExt relationship = 2 [ (validate.rules).message.required = true ];
}
